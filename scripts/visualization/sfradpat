#!/usr/bin/env python

# Specialized script used to visualize hessian-vector products

# For convenience this routine assumes a particular directory structure that allows
# simple access to inversion workflows.

import argparse
from os.path import join

import numpy as np
import matplotlib.pyplot as plt

from seisflows.plugins.misc import scattering

def parse_args():
    # Parse input arguments
    parser = argparse.ArgumentParser(description='Plot misfit gradients.')

    # file and format flags
    parser.add_argument('-p', '--pars', type=str,
                        default='velocity',
                        help='Parametrization')

    parser.add_argument('-m', '--mode', action='store_true',
                        default=False,
                        help='Plot as modes')

    return parser.parse_args()


if __name__ == "__main__":

    args = parse_args()
    params = ['velocity', 'impedance', 'slowness', 'bulk', 'lame']

    # set background parameters
    vp = 3000.0
    vs = vp / 1.76
    rho = 310. * vp**0.25

    try:
        rfunc = getattr(scattering, args.pars)
    except AttributeError as error:
        print('Current implentation includes {}'.format(params))
        print(repr(error))
    else:
        W = rfunc(vp, vs, rho)
        scattering.plot_rad_pats(W, W.keys(), plot_modes=args.mode)
        plt.show()