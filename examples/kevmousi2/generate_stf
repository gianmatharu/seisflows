#!/usr/bin/env python

import argparse
import numpy as np
from seisflows.seistools.susignal import source_time_function
import matplotlib.pyplot as plt

# Parse input arguments
parser = argparse.ArgumentParser(description='Generate a source wavelet')

# file and format flags
parser.add_argument('file')
parser.add_argument('-nt', '--ntimesteps', type=int, help='Length of time series')
parser.add_argument('-dt', '--deltat', type=float, help='Time interval')
parser.add_argument('-t0', type=float, help='Start of source')
parser.add_argument('-f0', type=float, help='Dominant frequency')

args = parser.parse_args()

#print arg
t = np.arange(0, args.ntimesteps * args.deltat, args.deltat)
print len(t)
stf = source_time_function(t, args.t0, args.f0)

# write as ascii time series
with open(args.file, 'w') as f:
    for i in range(args.ntimesteps):
        f.write('{:f} {:f}\n'.format(t[i], stf[i]))

plt.plot(t, stf)
plt.show()
