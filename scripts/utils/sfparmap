#!/usr/bin/env python

# Specialized script used to map parametrizations

# For convenience this routine assumes a particular directory structure that allows
# simple access to inversion workflows.

import argparse
from os.path import join

import seisflows.plugins.material as material
from seisflows.plugins.io.pewf2d import mread, mwrite


def parse_args():
    # Parse input arguments
    parser = argparse.ArgumentParser(description='Plot misfit gradients.')

    # file and format flags
    parser.add_argument('-p', '--path',
                        help='path to model')

    parser.add_argument('-o', '--opath',
                        default = '',
                        help='path to model')

    parser.add_argument('--pars', type=str,
                        help='parameters')

    parser.add_argument('-i', '--inverse', action='store_true',
                        default=False,
                        help='perform inverse mapping')

    return parser.parse_args()


if __name__ == "__main__":

    args = parse_args()

    if not args.opath:
        args.opath = args.path

    # get parameter class
    par = getattr(material, args.pars.lower())
    if 'rho' not in par.parameters:
        par.parameters += ['rho']

    if args.inverse:
        # load model to map
        model = mread(args.path, par.parameters)
        model = par.par_map_inverse(model)
    else:
        model = mread(args.path, ['rho', 'vp', 'vs'])
        model = par.par_map_forward(model)

    mwrite(model, args.opath)

