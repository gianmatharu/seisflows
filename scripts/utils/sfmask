#!/usr/bin/env python

# Specialized script used to visualize gradients.

# For convenience this routine assumes a particular directory structure that allows
# simple access to inversion workflows.

import argparse
from os.path import join

import numpy as np

from seisflows.tools.math import normalize
from seisflows.plugins.solver_io.pewf2d import read, write
from seisflows.plugins.solver.pewf2d import Par, event_dirname
from seisflows.tools.array import gridsmooth


def parse_args():
    # Parse input arguments
    parser = argparse.ArgumentParser(description='Plot misfit gradients.')

    # file and format flags
    parser.add_argument('-f', '--fpath',
                        default='./solver/INPUT/',
                        help='solver parameter file')

    parser.add_argument('-p', '--path',
                        default='./mask',
                        help='output path')

    parser.add_argument('-n', '--nlayers', type=int,
                        help='No. 0 layers')

    return parser.parse_args()


if __name__ == "__main__":

    args = parse_args()
    p = Par()
    p.read_par_file(join(args.fpath, 'par_template.cfg'))

    mask = np.ones((p.nz, p.nx))
    mask[:args.nlayers] = 0.0

    for name in ['mask', 'vp', 'vs', 'rho']:
        path = join(args.path, name+'.bin')
        mask.astype('float32').tofile(path)
