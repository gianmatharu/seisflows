#!/usr/bin/env python3

# Specialized script used to visualize observed and synthetic data. For convenience this routine assumes a
# particular directory structure that allows simple access to inversion workflows.
# The directories should be set up as scratch/solver/($EVENTID)/traces/obs and
# scratch/solver/($EVENTID)/traces/syn. Designed to be run from the working directory.

import argparse
from seisflows.tools.graphics import plot_ev_grad

# Parse input arguments
parser = argparse.ArgumentParser(description='Plot event gradient.')

# file and format flags
parser.add_argument('-nx', type=int, help='pixels in x direction.')
parser.add_argument('-nz', type=int, help='pixels in z direction.')

parser.add_argument('-a', action='store_true', help='Show alpha kernel')
parser.add_argument('-b', action='store_true', help='Show beta kernel')
parser.add_argument('-r', action='store_true', help='Show rho kernel')
parser.add_argument('-m', action='store_true', help='Show precond/mask')

parser.add_argument('-p', '--path', default='./scratch/solver', help='Path to')
parser.add_argument('-id', '--eventid', type=int, default=1, help='Event number')

parser.add_argument('-i', '--interactive', action='store_true', help='Enable interactive plotting')

parser.add_argument('-cm', '--cmap', default='seismic_r', help='Matplotlib colormap scheme. \
                    See matplotlib documentation.')
parser.add_argument('-c', '--clip', type=int, default='100', help='Clip amplitudes')

args = parser.parse_args()

if args.interactive:
    # Plot until escape or EOF
    while True:
        eid = input("Event id: ")
        if eid:
            try:
                eid = int(eid)
            except:
                raise ValueError('Input is not an int!')
            else:
                print('Section for event #{}'.format(eid))
                plot_ev_grad(args.path, eid, nx=args.nx, nz=args.nz, alpha=args.a, beta=args.b,
                rho=args.r, precond=args.m, cmap='seismic_r', clip=100)
        else:
            break
else:
    plot_ev_grad(args.path, args.eventid, nx=args.nx, nz=args.nz, alpha=args.a, beta=args.b,
    rho=args.r, precond=args.m, cmap='seismic_r', clip=100)

